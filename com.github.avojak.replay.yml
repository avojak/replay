app-id: com.github.avojak.replay

runtime: io.elementary.Platform
runtime-version: '7'
sdk: io.elementary.Sdk

command: com.github.avojak.replay

finish-args:
  - '--allow=bluetooth' # For Bluetooth gamepads (--device=all below may be sufficient since we're using libmanette)
  - '--device=dri' # For RetroGTK
  - '--share=ipc'
  - '--share=network' # Used for retrieving game artwork
  - '--socket=fallback-x11'
  - '--socket=wayland'
  - '--socket=pulseaudio' # For RetroGTK audio
  - '--filesystem=host' # For loading additional libretro cores
  #- '--filesystem=home' # For loading additional ROMs and save data (Don't need this because 'host' provides sufficient home directory access)
  # TODO: Will probably need Bluetooth and USB device access here for controllers
  - '--device=all' # For controllers

modules:
  # Dependencies
  - name: retro-gtk
    buildsystem: meson
    sources:
      - type: git
        url: https://gitlab.gnome.org/GNOME/retro-gtk.git
        tag: '1.0.2'
  - name: libmanette
    buildsystem: meson
    config-opts:
      - -Dgudev=disabled
    sources:
      - type: git
        url: https://gitlab.gnome.org/GNOME/libmanette.git
        tag: '0.2.6'
  - name: libevdev
    buildsystem: meson
    config-opts:
      - -Ddocumentation=disabled
      - -Dtests=disabled
    sources:
      - type: git
        url: https://gitlab.freedesktop.org/libevdev/libevdev.git
        tag: 'libevdev-1.12.1'

  # - name: librest
  #   buildsystem: meson
  #   sources:
  #     - type: git
  #       url: https://gitlab.gnome.org/GNOME/librest.git
  #       tag: '1.0.0'

  # TODO: Might make sense to maintain a fork of the cores and ROMs to ensure availability
  # LibRetro Cores
  - name: libretro-mgba
    no-autogen: true
    sources:
      - type: git
        url: https://github.com/libretro/mgba.git
        branch: 'master' # TODO: Lock this down to a specific version/commit
    make-install-args:
      - prefix=/app # Installs to /app/lib/libretro/mgba_libretro.so
      # TODO: Figure out how to cleanup unnecessary files after the build
  # - name: libretro-quicknes
  #   no-autogen: true
  #   sources:
  #     - type: git
  #       url: https://github.com/libretro/QuickNES_Core
  #       branch: 'master'
  #   no-make-install: true
  #   post-install:
  #     - install -m 644 quicknes_libretro.so /app/lib/libretro/quicknes_libretro.so
  # - name: libretro-bnes
  #   no-autogen: true
  #   sources:
  #     - type: git
  #       url: https://github.com/libretro/bnes-libretro.git
  #       branch: 'master'
  #   no-make-install: true
  #   post-install:
  #     - install -m 644 bnes_libretro.so /app/lib/libretro/bnes_libretro.so
  # - name: libretro-bsnes-mercury-performance
  #   no-autogen: true
  #   sources:
  #     - type: git
  #       url: https://github.com/libretro/bsnes-mercury.git
  #       branch: 'master'
  #   no-make-install: true
  #   post-install:
  #     - install -m 644 bsnes_mercury_performance_libretro.so /app/lib/libretro/bsnes_mercury_performance_libretro.so

  # Install the LibRetro info files for only the bundled cores
  - name: libretro-core-info
    buildsystem: simple
    no-autogen: true
    sources:
      - type: git
        url: https://github.com/libretro/libretro-core-info.git
        tag: 'v1.10.1'
    build-commands:
      - install -m 644 mgba_libretro.info /app/lib/libretro/mgba_libretro.info
      # - install -m 644 quicknes_libretro.info /app/lib/libretro/quicknes_libretro.info
      # - install -m 644 bnes_libretro.info /app/lib/libretro/bnes_libretro.info

  # Libretro database
  - name: libretro-database
    buildsystem: simple
    no-autogen: true
    sources:
      - type: archive
        url: https://github.com/avojak/libretrodb-sqlite/releases/download/2.0.0/libretrodb.sqlite.tgz
        sha256: d9cbe0cc60b0d3890344c639ad4982a5db7690f44a82137e33b6d945785bcb90
        strip-components: 1
    build-commands:
      - install -d /app/lib/database
      - install -m 644 -t /app/lib/database libretrodb.sqlite
    # TODO: In a post-install step we could insert the data for the homebrew games using the sqlite CLI,
    #       and also copy over screenshots, etc.

  # ROMs
  # - name: ROMs
  #   buildsystem: simple
  #   no-autogen: true
  #   sources:
  #     - type: dir
  #       path: data/roms
  #   build-commands:
  #     - install -d /app/lib/roms
  #     - install -m 644 -t /app/lib/roms ./*
  - name: gb-wordle
    no-autogen: true
    sources:
      - type: git
        url: https://github.com/bbbbbr/gb-wordle.git
        tag: 'v0.85'
      - type: archive
        url: https://github.com/gbdk-2020/gbdk-2020/releases/download/4.0.6/gbdk-linux64.tar.gz
        sha256: fecdadbeb5dcab5ceebff67ff4a7630bf6f572880d4e86ac600585d8064dc7c1
        strip-components: 0
    make-args:
      - GBDK_HOME=./gbdk/
      - gbc
    build-options:
      cflags: ""
      cflags-override: true
    no-make-install: true
    post-install:
      - install -d /app/lib/roms
      - install -m 644 -t /app/lib/roms build/gbc/GBWORDYL_0.85_en.gbc
      # - md5sum build/gbc/GBWORDYL_0.85_en.gbc | cut -d' ' -f1 | xargs | tr '[:lower:]' '[:upper:]'
  - name: flooder
    no-autogen: true
    sources:
      - type: git
        url: https://github.com/Obalfour/Flooder.git
        branch: 'main'
      - type: archive
        url: https://github.com/gbdk-2020/gbdk-2020/releases/download/4.0.6/gbdk-linux64.tar.gz
        sha256: fecdadbeb5dcab5ceebff67ff4a7630bf6f572880d4e86ac600585d8064dc7c1
        strip-components: 0
    subdir: src
    make-args:
      - flooder.gb
      - GBDK_HOME=../gbdk/
    no-make-install: true
    post-install:
      - install -d /app/lib/roms
      - install -m 644 -t /app/lib/roms flooder.gb

  - name: replay
    buildsystem: meson
    sources:
      - type: dir
        path: .